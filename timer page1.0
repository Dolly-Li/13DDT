import tkinter as tk
from datetime import datetime
from tkcalendar import*

class DTimer:
    def __init__(self, root):
        self.root = root
        self.root.title("D-Timer")
        self.root.geometry("600x400")
        self.root.configure(bg="#c6d4c6")
        
        
        self.minutes = 5
        self.seconds = 0
        self.running = False
        self.running = False
        self.paused = False
        self.total_seconds = 5 * 60


        self.clock_label = tk.Label(root, text="", font=("Arial", 12), bg="#c6d4c6", anchor="e")
        self.clock_label.pack(pady=10, anchor="ne", padx=20)
        
        
        self.timer_label = tk.Label(root, text=self.format_time(), font=("Arial", 48), bg="#c6d4c6")
        self.timer_label.pack(pady=20)

      
        self.start_button = tk.Button(root, text="Start", font=("Arial", 14), command=self.start_timer)
        self.start_button.pack()

      
        self.footer = tk.Label(root, text="LET'S GO!!!\nHOW LONG CAN U BE CONCENTRATED?", font=("Helvetica", 10), bg="#c6d4c6")
        self.footer.pack(pady=10)

    def format_time(self):
        mins, secs = divmod(self.total_seconds, 60)
        hours, mins = divmod(mins, 60)
        return f"{hours:02}:{mins:02}:{secs:02}"

    def start_timer(self):
        if not self.running:
            self.running = True
            self.paused = False
            self.countdown()

    def toggle_pause(self):
        if self.running:
            self.paused = not self.paused
            self.pause_button.config(text="Resume" if self.paused else "Pause")
            if not self.paused:
                self.countdown()

    def reset_timer(self):
        try:
            h = int(self.hour_entry.get()) if self.hour_entry.get() else 0
            m = int(self.minute_entry.get()) if self.minute_entry.get() else 0
            s = int(self.second_entry.get()) if self.second_entry.get() else 0
            self.total_seconds = h * 3600 + m * 60 + s
            self.running = False
            self.paused = False
            self.pause_button.config(text="Pause")
            self.timer_label.config(text=self.format_time())
        except ValueError:
            self.timer_label.config(text="Invalid Input")

    def countdown(self):
        if not self.running or self.paused:
            return
        if self.total_seconds <= 0:
            self.running = False
            self.timer_label.config(text="DONE!")
            return
        self.total_seconds -= 1
        self.timer_label.config(text=self.format_time())
        self.root.after(1000, self.countdown)

# Run 
root = tk.Tk()
app = DTimer(root)
root.mainloop()